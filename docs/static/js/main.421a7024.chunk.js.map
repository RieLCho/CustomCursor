{"version":3,"sources":["context/mouse-context.js","components/DotRing.js","hooks/useMousePosition.js","App.js","reportWebVitals.js","index.js"],"names":["MouseContext","createContext","cursorType","cursorChangeHandler","MouseContextProvider","props","useState","setCursorType","Provider","value","children","DotRing","useContext","x","y","mousePosition","setMousePosition","useEffect","mouseMoveHandler","event","clientX","clientY","document","addEventListener","removeEventListener","useMousePosition","style","left","top","className","App","onMouseEnter","onMouseLeave","background","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"kQAEaA,EAAeC,wBAAc,CACxCC,WAAY,GACZC,oBAAqB,eAsBRC,EAnBc,SAACC,GAAW,IAAD,EACFC,mBAAS,IADP,mBAC/BJ,EAD+B,KACnBK,EADmB,KAOtC,OACE,cAACP,EAAaQ,SAAd,CACEC,MAAO,CACLP,WAAYA,EACZC,oBARsB,SAACD,GAC3BK,EAAcL,KAId,SAMGG,EAAMK,YCCEC,EAjBC,WAAO,IACbT,EAAeU,qBAAWZ,GAA1BE,WADY,ECHP,WAA6B,IAAD,EACCI,mBAAS,CAAEO,EAAG,KAAMC,EAAG,OADxB,mBAClCC,EADkC,KACnBC,EADmB,KAezC,OAZAC,qBAAU,WACR,IAAMC,EAAmB,SAACC,GAAW,IAC3BC,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QACjBL,EAAiB,CAAEH,EAAGO,EAASN,EAAGO,KAIpC,OAFAC,SAASC,iBAAiB,YAAaL,GAEhC,WACLI,SAASE,oBAAoB,YAAaN,MAE3C,IAEIH,EDVUU,GAATZ,EAFY,EAEZA,EAAGC,EAFS,EAETA,EACX,OACE,qCACE,qBACEY,MAAO,CAAEC,KAAK,GAAD,OAAKd,EAAL,MAAYe,IAAI,GAAD,OAAKd,EAAL,OAC5Be,UAAW,QAAU3B,IAEvB,qBACE2B,UAAW,OAAS3B,EACpBwB,MAAO,CAAEC,KAAK,GAAD,OAAKd,EAAL,MAAYe,IAAI,GAAD,OAAKd,EAAL,aEOrBgB,MAlBf,WAAgB,IACN3B,EAAwBS,qBAAWZ,GAAnCG,oBACR,OACE,sBAAK0B,UAAU,MAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,YAAf,SACE,qBACEE,aAAc,kBAAM5B,EAAoB,YACxC6B,aAAc,kBAAM7B,EAAoB,KAF1C,SAIE,mDAGJ,qBAAK0B,UAAU,YAAYH,MAAO,CAAEO,WAAY,mBCNvCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJvB,SAASwB,eAAe,SAM1BZ,M","file":"static/js/main.421a7024.chunk.js","sourcesContent":["import React, { createContext, useState } from \"react\";\n\nexport const MouseContext = createContext({\n  cursorType: \"\",\n  cursorChangeHandler: () => {},\n});\n\nconst MouseContextProvider = (props) => {\n  const [cursorType, setCursorType] = useState(\"\");\n\n  const cursorChangeHandler = (cursorType) => {\n    setCursorType(cursorType);\n  };\n\n  return (\n    <MouseContext.Provider\n      value={{\n        cursorType: cursorType,\n        cursorChangeHandler: cursorChangeHandler,\n      }}\n    >\n      {props.children}\n    </MouseContext.Provider>\n  );\n};\n\nexport default MouseContextProvider;\n","import React, { useContext } from \"react\";\nimport \"./DotRing.css\";\nimport useMousePosition from \"../hooks/useMousePosition\";\nimport { MouseContext } from \"../context/mouse-context\";\n\nconst DotRing = () => {\n  const { cursorType } = useContext(MouseContext);\n  const { x, y } = useMousePosition();\n  return (\n    <>\n      <div\n        style={{ left: `${x}px`, top: `${y}px` }}\n        className={\"ring \" + cursorType}\n      ></div>\n      <div\n        className={\"dot \" + cursorType}\n        style={{ left: `${x}px`, top: `${y}px` }}\n      ></div>\n    </>\n  );\n};\n\nexport default DotRing;\n","import { useEffect, useState } from \"react\";\n\nexport default function useMousePosition() {\n  const [mousePosition, setMousePosition] = useState({ x: null, y: null });\n\n  useEffect(() => {\n    const mouseMoveHandler = (event) => {\n      const { clientX, clientY } = event;\n      setMousePosition({ x: clientX, y: clientY });\n    };\n    document.addEventListener(\"mousemove\", mouseMoveHandler);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", mouseMoveHandler);\n    };\n  }, []);\n\n  return mousePosition;\n}\n","import { useContext } from \"react\";\nimport \"./App.css\";\nimport DotRing from \"./components/DotRing\";\nimport { MouseContext } from \"./context/mouse-context\";\n\nfunction App() {\n  const { cursorChangeHandler } = useContext(MouseContext);\n  return (\n    <div className=\"App\">\n      <DotRing />\n      <div className=\"container\">\n        <div\n          onMouseEnter={() => cursorChangeHandler(\"hovered\")}\n          onMouseLeave={() => cursorChangeHandler(\"\")}\n        >\n          <h1>Hover over me</h1>\n        </div>\n      </div>\n      <div className=\"container\" style={{ background: \"peachpuff\" }}></div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport MouseContextProvider from \"./context/mouse-context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <MouseContextProvider>\n      <App />\n    </MouseContextProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}